{"ast":null,"code":"var _jsxFileName = \"D:\\\\Placement_Preparation\\\\MernWebChat-1\\\\client\\\\src\\\\pages\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../styles/home.css'; // Ensure you have correct styles for the login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  function update(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"username\") setUsername(value);\n    if (name === \"password\") setPassword(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Enter your username or gmail\",\n          value: username,\n          onChange: update\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\" // Use type=\"password\" for password input\n          ,\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: update\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","update","e","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/Placement_Preparation/MernWebChat-1/client/src/pages/login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport '../styles/home.css'; // Ensure you have correct styles for the login\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function update(e) {\r\n    const { name, value } = e.target;\r\n    if (name === \"username\") setUsername(value);\r\n    if (name === \"password\") setPassword(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"form-container\">\r\n        <h1>Login</h1>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Enter your username or gmail\"\r\n            value={username}\r\n            onChange={update}\r\n          />\r\n          <input\r\n            type=\"password\" // Use type=\"password\" for password input\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={update}\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASS,MAAMA,CAACC,CAAC,EAAE;IACjB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,IAAIF,IAAI,KAAK,UAAU,EAAEL,WAAW,CAACM,KAAK,CAAC;IAC3C,IAAID,IAAI,KAAK,UAAU,EAAEH,WAAW,CAACI,KAAK,CAAC;EAC7C;EAEA,oBACEV,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBb,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bb,OAAA;QAAAa,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdjB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UACEkB,IAAI,EAAC,MAAM;UACXT,IAAI,EAAC,UAAU;UACfU,WAAW,EAAC,8BAA8B;UAC1CT,KAAK,EAAEP,QAAS;UAChBiB,QAAQ,EAAEb;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFjB,OAAA;UACEkB,IAAI,EAAC,UAAU,CAAC;UAAA;UAChBT,IAAI,EAAC,UAAU;UACfU,WAAW,EAAC,UAAU;UACtBT,KAAK,EAAEL,QAAS;UAChBe,QAAQ,EAAEb;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFjB,OAAA;UAAQkB,IAAI,EAAC,QAAQ;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAlCID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}